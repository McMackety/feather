name: build

on:
  push:
    branches: [ develop, master, staging ]
  pull_request:
    branches: [ develop, master, staging ]

jobs:
  build:
    name: "Build and Test"
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019, macos-10.15 ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    # Caching
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Install rustfmt
      run: rustup component add rustfmt
      
    - name: Run tests
      run: cargo test
      env:
        RUSTFLAGS: "-C opt-level=0"

    - name: Install Clippy
      run: rustup component add clippy
    
    - name: Run Clippy
      run: cargo clippy --all-targets -- -D warnings
      env:
        RUSTFLAGS: "-C opt-level=0"
    
    - name: Check formatting
      run: cargo fmt -- --check
      
  create-release:
    name: Publish to GitHub Releases
    strategy:
      matrix:
        os: [ ubuntu-18.04, windows-2019, macos-10.15 ]
        include:
          - os: ubuntu-18.04
            os-name: linux
          - os: windows-2019
            os-name: windows
          - os: macos-10.15
            os-name: macOS
    runs-on: ${{ matrix.os }}
    
    if: startsWith(github.ref, 'refs/tags/')
    needs: ['build']
    
    steps:
      - name: Build (release mode)
        run: cargo build --release
      
      - name: Get tag name
        uses: olegtarasov/get-tag@v2
        id: tagName
      
      - name: Compress executable
        uses: papeloto/action-zip@v1
        with:
          files: target/release/feather-server
          dest: target/release/feather-${{ steps.tagName.outputs.tag }}-${{ matrix.os-name }}.zip

      - name: Publish release
        uses: ncipollo/release-action@v1.6.1
        with:
          # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
          artifact: target/release/feather-${{ steps.tagName.outputs.tag }}-${{ matrix.os-name }}.zip
          # The Github token.
          token: ${{ secrets.GITHUB_TOKEN }}
      
